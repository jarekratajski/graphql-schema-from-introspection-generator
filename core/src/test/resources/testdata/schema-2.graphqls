type Company {
    id: ID!
    name: String!
    website: String!
}

input CreateCustomerInput {
    clientMutationId: String!
    email: String
    name: String
}

type CreateCustomerPayload {
    clientMutationId: String!
    customer: Customer
}

type Customer {
    company: Company
    email: String!
    # fields with ! are required
    id: ID!
    name: String!
    orders: [Order]
}

type Item {
    amount: Int
    currency: String
    id: ID!
    name: String!
    price: String
    producer: Company
}

type Mutation {
    createCustomer(input: CreateCustomerInput): CreateCustomerPayload!
}

type Order {
    id: ID!
    items: [Item]
    status: Status
}

type Query {
    customer(id: String!): Customer!
    customers: [Customer]!
}

enum Status {
    NEW, CANCELED, DONE
}